server:
  port: 8100
eureka:
  instance:
    hostname: localhost
spring:
  cloud:
    config:
      enabled: false
  datasource:
    url: jdbc:mysql://localhost:3306/datt_demo?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: root
    password: D@y0989510517
  application:
    name: oauth-service
  profiles:
    active: dev
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
#          google:
#            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
#            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - email
#              - profile
          facebook:
            clientId: 374479264704761
            clientSecret: 6f388ad75de1182d96688bab7631e2e4
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
#          github:
#            clientId: d3e47fc2ddd966fa4352
#            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - user:email
#              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v13.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v13.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v13.0/me?fields=id,first_name,middle_name,last_name,name,email,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8765
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect